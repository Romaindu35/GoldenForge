--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -7,6 +_,7 @@
 import com.mojang.authlib.minecraft.MinecraftSessionService;
 import com.mojang.datafixers.DataFixer;
 import java.io.BufferedReader;
+import java.io.File;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.net.InetAddress;
@@ -55,13 +_,14 @@
 import net.minecraft.world.server.ServerWorld;
 import net.minecraft.world.storage.IServerConfiguration;
 import net.minecraft.world.storage.SaveFormat;
+import net.minecraftforge.fml.loading.FMLPaths;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class DedicatedServer extends MinecraftServer implements IServer {
    private static final Logger field_155771_h = LogManager.getLogger();
    private static final Pattern field_189647_l = Pattern.compile("^[a-fA-F0-9]{40}$");
-   public final List<PendingCommand> field_71341_l = Collections.synchronizedList(Lists.newArrayList());
+   public final java.util.Queue<PendingCommand> field_71341_l = new java.util.concurrent.ConcurrentLinkedQueue<>(); // Paper - use a proper queue
    private QueryThread field_71342_m;
    private final RConConsoleSource field_184115_n;
    private MainThread field_71339_n;
@@ -81,18 +_,21 @@
    public boolean func_71197_b() throws IOException {
       Thread thread = new Thread("Server console handler") {
          public void run() {
-            BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
-
-            String s1;
-            try {
-               while(!DedicatedServer.this.func_71241_aa() && DedicatedServer.this.func_71278_l() && (s1 = bufferedreader.readLine()) != null) {
-                  DedicatedServer.this.func_195581_a(s1, DedicatedServer.this.func_195573_aM());
-               }
-            } catch (IOException ioexception1) {
-               DedicatedServer.field_155771_h.error("Exception handling console input", (Throwable)ioexception1);
-            }
-
+            new com.destroystokyo.paper.console.PaperConsole(DedicatedServer.this).start();
          }
+//            if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
+//            BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
+//
+//            String s1;
+//            try {
+//               while(!DedicatedServer.this.isStopped() && DedicatedServer.this.isRunning() && (s1 = bufferedreader.readLine()) != null) {
+//                  DedicatedServer.this.handleConsoleInput(s1, DedicatedServer.this.createCommandSourceStack());
+//               }
+//            } catch (IOException ioexception1) {
+//               DedicatedServer.LOGGER.error("Exception handling console input", (Throwable)ioexception1);
+//            }
+//
+//         }
       };
       thread.setDaemon(true);
       thread.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler(field_155771_h));
@@ -145,28 +_,38 @@
       if (!this.func_71266_T()) {
          field_155771_h.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
          field_155771_h.warn("The server will make no attempt to authenticate usernames. Beware.");
-         field_155771_h.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
+         // Spigot start
+         if (org.spigotmc.SpigotConfig.bungee) {
+            field_155771_h.warn("Whilst this makes it possible to use BungeeCord, unless access to your server is properly restricted, it also opens up the ability for hackers to connect with any username they choose.");
+            field_155771_h.warn("Please see http://www.spigotmc.org/wiki/firewall-guide/ for further information.");
+         } else {
+            field_155771_h.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
+         }
+         // Spigot end
          field_155771_h.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
       }
 
       if (this.func_152368_aE()) {
-         this.func_152358_ax().func_152658_c();
+         this.func_152358_ax().save(false);
       }
 
       if (!PreYggdrasilConverter.func_219587_e(this)) {
          return false;
       } else {
          this.func_184105_a(new DedicatedPlayerList(this, this.field_240767_f_, this.field_240766_e_));
+         org.spigotmc.SpigotConfig.init(new File(FMLPaths.GFDIR.get().toString(), "spigot.yml"));
+         com.destroystokyo.paper.PaperConfig.init(new File(FMLPaths.GFDIR.get().toString(), "paper.yml"));
          long i = Util.func_211178_c();
          this.func_71191_d(serverproperties.field_219026_t);
          SkullTileEntity.func_184293_a(this.func_152358_ax());
          SkullTileEntity.func_184294_a(this.func_147130_as());
          PlayerProfileCache.func_187320_a(this.func_71266_T());
+         if (!net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
          field_155771_h.info("Preparing level \"{}\"", (Object)this.func_230542_k__());
          this.func_240800_l__();
          long j = Util.func_211178_c() - i;
          String s = String.format(Locale.ROOT, "%.3fs", (double)j / 1.0E9D);
-         field_155771_h.info("Done ({})! For help, type \"help\"", (Object)s);
+         this.field_211151_aa = Util.func_211177_b(); //Forge: Update server time to prevent watchdog/spaming during long load.
          if (serverproperties.field_219027_u != null) {
             this.func_200252_aR().func_223585_a(GameRules.field_223620_w).func_223570_a(serverproperties.field_219027_u, this);
          }
@@ -181,20 +_,21 @@
             this.field_71339_n = MainThread.func_242130_a(this);
          }
 
-         if (this.func_175593_aQ() > 0L) {
-            Thread thread1 = new Thread(new ServerHangWatchdog(this));
-            thread1.setUncaughtExceptionHandler(new DefaultWithNameUncaughtExceptionHandler(field_155771_h));
-            thread1.setName("Server Watchdog");
-            thread1.setDaemon(true);
-            thread1.start();
-         }
+//         if (this.getMaxTickLength() > 0L) {
+//            Thread thread1 = new Thread(new ServerHangWatchdog(this));
+//            thread1.setUncaughtExceptionHandler(new DefaultWithNameUncaughtExceptionHandler(LOGGER));
+//            thread1.setName("Server Watchdog");
+//            thread1.setDaemon(true);
+//            thread1.start();
+//         }
 
          Items.field_190931_a.func_150895_a(ItemGroup.field_78027_g, NonNullList.func_191196_a());
+         // <3 you Grum for this, saves us ~30 patch files! --^
          if (serverproperties.field_241079_P_) {
             ServerInfoMBean.func_233490_a_(this);
          }
 
-         return true;
+         return net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerStarting(this);
       }
    }
 
@@ -274,12 +_,15 @@
       }
 
       if (this.field_71339_n != null) {
-         this.field_71339_n.func_219591_b();
+         //this.rconThread.stop();
       }
 
       if (this.field_71342_m != null) {
-         this.field_71342_m.func_219591_b();
+         //this.queryThreadGs4.stop();
       }
+
+      hasFullyShutdown = true; // Paper
+      Runtime.getRuntime().halt(0);
 
    }
 
@@ -303,9 +_,19 @@
    }
 
    public void func_71333_ah() {
-      while(!this.field_71341_l.isEmpty()) {
-         PendingCommand pendingcommand = this.field_71341_l.remove(0);
-         this.func_195571_aL().func_197059_a(pendingcommand.field_73701_b, pendingcommand.field_73702_a);
+//      while(!this.consoleInput.isEmpty()) {
+//         PendingCommand pendingcommand = this.consoleInput.remove(0);
+//         this.getCommands().performCommand(pendingcommand.source, pendingcommand.msg);
+//      }
+
+      // Paper start - use proper queue
+      PendingCommand servercommand;
+      while ((servercommand = this.field_71341_l.poll()) != null) {
+         // Paper end
+
+         // this.getCommandDispatcher().a(servercommand.source, servercommand.command); // Called in dispatchServerCommand
+         this.func_195571_aL().func_197059_a(servercommand.field_73701_b, servercommand.field_73702_a);
+         // CraftBukkit end
       }
 
    }
@@ -508,11 +_,16 @@
 
    public void func_71260_j() {
       super.func_71260_j();
-      Util.func_240993_h_();
+      //Util.shutdownExecutors();
    }
 
    public boolean func_213199_b(GameProfile p_213199_1_) {
       return false;
+   }
+
+   @Override //Forge: Enable formated text for colors in console.
+   public void func_145747_a(net.minecraft.util.text.ITextComponent message, java.util.UUID p_145747_2_) {
+      field_155771_h.info(message.getString());
    }
 
    public int func_230512_b_(int p_230512_1_) {
