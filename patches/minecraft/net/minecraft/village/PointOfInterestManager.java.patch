--- a/net/minecraft/village/PointOfInterestManager.java
+++ b/net/minecraft/village/PointOfInterestManager.java
@@ -19,6 +_,7 @@
 import java.util.stream.IntStream;
 import java.util.stream.Stream;
 import net.minecraft.block.BlockState;
+import net.minecraft.nbt.CompoundNBT;
 import net.minecraft.util.SectionDistanceGraph;
 import net.minecraft.util.Util;
 import net.minecraft.util.datafix.DefaultTypeReferences;
@@ -29,13 +_,21 @@
 import net.minecraft.world.chunk.ChunkSection;
 import net.minecraft.world.chunk.ChunkStatus;
 import net.minecraft.world.chunk.storage.RegionSectionCache;
+import net.minecraft.world.server.ServerWorld;
 
 public class PointOfInterestManager extends RegionSectionCache<PointOfInterestData> {
    private final PointOfInterestManager.DistanceGraph field_219164_a;
    private final LongSet field_226345_b_ = new LongOpenHashSet();
 
+   private final ServerWorld world; // Paper
+
    public PointOfInterestManager(File p_i231554_1_, DataFixer p_i231554_2_, boolean p_i231554_3_) {
+    this(p_i231554_1_, p_i231554_2_, p_i231554_3_, null);
+   }
+
+   public PointOfInterestManager(File p_i231554_1_, DataFixer p_i231554_2_, boolean p_i231554_3_, ServerWorld world) {
       super(p_i231554_1_, PointOfInterestData::func_234158_a_, PointOfInterestData::new, p_i231554_2_, DefaultTypeReferences.POI_CHUNK, p_i231554_3_);
+      this.world = world;
       this.field_219164_a = new PointOfInterestManager.DistanceGraph();
    }
 
@@ -146,7 +_,20 @@
    }
 
    public void func_219115_a(BooleanSupplier p_219115_1_) {
-      super.func_219115_a(p_219115_1_);
+      // Paper start - async chunk io
+      if (this.world == null) {
+         super.func_219115_a(p_219115_1_);
+      } else {
+         //super.a(booleansupplier); // re-implement below
+         while (!((RegionSectionCache)this).field_219122_d.isEmpty() && p_219115_1_.getAsBoolean()) {
+            ChunkPos chunkcoordintpair = SectionPos.a(((RegionSectionCache)this).field_219122_d.firstLong()).func_218155_u();
+
+            CompoundNBT data = this.getData(chunkcoordintpair);
+            com.destroystokyo.paper.io.PaperFileIOThread.Holder.INSTANCE.scheduleSave(this.world,
+                    chunkcoordintpair.field_77276_a, chunkcoordintpair.field_77275_b, data, null, com.destroystokyo.paper.io.PrioritizedTaskQueue.LOW_PRIORITY);
+         }
+      }
+      // Paper end
       this.field_219164_a.func_215563_a();
    }
 
@@ -233,6 +_,35 @@
          super.func_215483_b(Integer.MAX_VALUE);
       }
    }
+
+   // Paper start - Asynchronous chunk io
+   @javax.annotation.Nullable
+   @Override
+   public CompoundNBT func_219099_e(ChunkPos chunkcoordintpair) throws java.io.IOException {
+      if (this.world != null && Thread.currentThread() != com.destroystokyo.paper.io.PaperFileIOThread.Holder.INSTANCE) {
+         CompoundNBT ret = com.destroystokyo.paper.io.PaperFileIOThread.Holder.INSTANCE
+                 .loadChunkDataAsyncFuture(this.world, chunkcoordintpair.field_77276_a, chunkcoordintpair.field_77275_b, com.destroystokyo.paper.io.IOUtil.getPriorityForCurrentThread(),
+                         true, false, true).join().poiData;
+
+         if (ret == com.destroystokyo.paper.io.PaperFileIOThread.FAILURE_VALUE) {
+            throw new java.io.IOException("See logs for further detail");
+         }
+         return ret;
+      }
+      return super.func_219099_e(chunkcoordintpair);
+   }
+
+   @Override
+   public void func_219100_a(ChunkPos chunkcoordintpair, CompoundNBT nbttagcompound) throws java.io.IOException {
+      if (this.world != null && Thread.currentThread() != com.destroystokyo.paper.io.PaperFileIOThread.Holder.INSTANCE) {
+         com.destroystokyo.paper.io.PaperFileIOThread.Holder.INSTANCE.scheduleSave(
+                 this.world, chunkcoordintpair.field_77276_a, chunkcoordintpair.field_77275_b, nbttagcompound, null,
+                 com.destroystokyo.paper.io.IOUtil.getPriorityForCurrentThread());
+         return;
+      }
+      super.func_219100_a(chunkcoordintpair, nbttagcompound);
+   }
+   // Paper end
 
    public static enum Status {
       HAS_SPACE(PointOfInterest::func_218265_d),
