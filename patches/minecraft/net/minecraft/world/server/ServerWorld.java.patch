--- a/net/minecraft/world/server/ServerWorld.java
+++ b/net/minecraft/world/server/ServerWorld.java
@@ -1,5 +_,6 @@
 package net.minecraft.world.server;
 
+import com.destroystokyo.paper.server.ticklist.PaperTickList;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
@@ -35,10 +_,8 @@
 import java.util.stream.Stream;
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
-import net.minecraft.block.Block;
-import net.minecraft.block.BlockEventData;
-import net.minecraft.block.BlockState;
-import net.minecraft.block.Blocks;
+
+import net.minecraft.block.*;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityClassification;
@@ -143,27 +_,24 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class ServerWorld extends World implements ISeedReader {
+public class ServerWorld extends World implements ISeedReader, net.minecraftforge.common.extensions.IForgeWorldServer {
    public static final BlockPos field_241108_a_ = new BlockPos(100, 50, 0);
    private static final Logger field_147491_a = LogManager.getLogger();
    private final Int2ObjectMap<Entity> field_217498_x = new Int2ObjectLinkedOpenHashMap<>();
+   final com.tuinity.tuinity.util.maplist.IteratorSafeOrderedReferenceSet<Entity> entitiesForIteration = new com.tuinity.tuinity.util.maplist.IteratorSafeOrderedReferenceSet<>(2048, 0.5f, 2048, 0.2, true); // Tuinity - make removing entities while ticking safe
    private final Map<UUID, Entity> field_175741_N = Maps.newHashMap();
    private final Queue<Entity> field_217499_z = Queues.newArrayDeque();
    private final List<ServerPlayerEntity> field_217491_A = Lists.newArrayList();
    private final ServerChunkProvider field_241102_C_;
-   boolean field_217492_a;
+   public boolean field_217492_a;
    private final MinecraftServer field_73061_a;
    private final IServerWorldInfo field_241103_E_;
    public boolean field_73058_d;
    private boolean field_73068_P;
    private int field_80004_Q;
    private final Teleporter field_85177_Q;
-   private final ServerTickList<Block> field_94579_S = new ServerTickList<>(this, (p_205341_0_) -> {
-      return p_205341_0_ == null || p_205341_0_.func_176223_P().func_196958_f();
-   }, Registry.field_212618_g::func_177774_c, this::func_205338_b);
-   private final ServerTickList<Fluid> field_205342_P = new ServerTickList<>(this, (p_205774_0_) -> {
-      return p_205774_0_ == null || p_205774_0_ == Fluids.field_204541_a;
-   }, Registry.field_212619_h::func_177774_c, this::func_205339_a);
+   private final ServerTickList<Block> field_94579_S;
+   private final ServerTickList<Fluid> field_205342_P;
    private final Set<PathNavigator> field_217495_I = Sets.newHashSet();
    protected final RaidManager field_217494_c;
    private final ObjectLinkedOpenHashSet<BlockEventData> field_147490_S = new ObjectLinkedOpenHashSet<>();
@@ -173,11 +_,36 @@
    private final DragonFightManager field_241105_O_;
    private final StructureManager field_241106_P_;
    private final boolean field_241107_Q_;
+   private net.minecraftforge.common.util.WorldCapabilityData capabilityData;
+
+   // GoldenForge - Paper - rewrite ticklistserver
+   public void onChunkSetTicking(int chunkX, int chunkZ) {
+      if (com.destroystokyo.paper.PaperConfig.useOptimizedTickList) {
+         ((com.destroystokyo.paper.server.ticklist.PaperTickList) this.field_94579_S).onChunkSetTicking(chunkX, chunkZ);
+         ((com.destroystokyo.paper.server.ticklist.PaperTickList) this.field_205342_P).onChunkSetTicking(chunkX, chunkZ);
+      }
+   }
+   // GoldenForge end
 
    public ServerWorld(MinecraftServer p_i241885_1_, Executor p_i241885_2_, SaveFormat.LevelSave p_i241885_3_, IServerWorldInfo p_i241885_4_, RegistryKey<World> p_i241885_5_, DimensionType p_i241885_6_, IChunkStatusListener p_i241885_7_, ChunkGenerator p_i241885_8_, boolean p_i241885_9_, long p_i241885_10_, List<ISpecialSpawner> p_i241885_12_, boolean p_i241885_13_) {
       super(p_i241885_4_, p_i241885_5_, p_i241885_6_, p_i241885_1_::func_213185_aS, false, p_i241885_9_, p_i241885_10_);
       this.field_241107_Q_ = p_i241885_13_;
       this.field_73061_a = p_i241885_1_;
+      if (com.destroystokyo.paper.PaperConfig.useOptimizedTickList) {
+         this.field_94579_S = new PaperTickList<>(this, (p_205341_0_) -> {
+            return p_205341_0_ == null || p_205341_0_.func_176223_P().func_196958_f();
+         }, Registry.field_212618_g::func_177774_c, this::func_205338_b);
+         this.field_205342_P = new PaperTickList<>(this, (p_205774_0_) -> {
+            return p_205774_0_ == null || p_205774_0_ == Fluids.field_204541_a;
+         }, Registry.field_212619_h::func_177774_c, this::func_205339_a);
+      } else {
+         this.field_94579_S = new ServerTickList<>(this, (p_205341_0_) -> {
+            return p_205341_0_ == null || p_205341_0_.func_176223_P().func_196958_f();
+         }, Registry.field_212618_g::func_177774_c, this::func_205338_b);
+         this.field_205342_P = new ServerTickList<>(this, (p_205774_0_) -> {
+            return p_205774_0_ == null || p_205774_0_ == Fluids.field_204541_a;
+         }, Registry.field_212619_h::func_177774_c, this::func_205339_a);
+      }
       this.field_241104_N_ = p_i241885_12_;
       this.field_241103_E_ = p_i241885_4_;
       this.field_241102_C_ = new ServerChunkProvider(this, p_i241885_3_, p_i241885_1_.func_195563_aC(), p_i241885_1_.func_240792_aT_(), p_i241885_2_, p_i241885_8_, p_i241885_1_.func_184103_al().func_72395_o(), p_i241885_1_.func_230540_aS_(), p_i241885_7_, () -> {
@@ -200,7 +_,7 @@
       } else {
          this.field_241105_O_ = null;
       }
-
+      this.initCapabilities();
    }
 
    public void func_241113_a_(int p_241113_1_, int p_241113_2_, boolean p_241113_3_, boolean p_241113_4_) {
@@ -296,15 +_,19 @@
          this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q), this.func_234923_W_());
       }
 
+      /* The function in use here has been replaced in order to only send the weather info to players in the correct dimension,
+       * rather than to all players on the server. This is what causes the client-side rain, as the
+       * client believes that it has started raining locally, rather than in another dimension.
+       */
       if (flag != this.func_72896_J()) {
          if (flag) {
-            this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241766_c_, 0.0F));
+            this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241766_c_, 0.0F), this.func_234923_W_());
          } else {
-            this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241765_b_, 0.0F));
+            this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241765_b_, 0.0F), this.func_234923_W_());
          }
 
-         this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, this.field_73004_o));
-         this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q));
+         this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, this.field_73004_o), this.func_234923_W_());
+         this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q), this.func_234923_W_());
       }
 
       if (this.field_73068_P && this.field_217491_A.stream().noneMatch((p_241132_0_) -> {
@@ -312,8 +_,8 @@
       })) {
          this.field_73068_P = false;
          if (this.func_82736_K().func_223586_b(GameRules.field_223607_j)) {
-            long l = this.field_72986_A.func_76073_f() + 24000L;
-            this.func_241114_a_(l - l % 24000L);
+            long l = this.func_72820_D() + 24000L;
+            this.func_241114_a_(net.minecraftforge.event.ForgeEventFactory.onSleepFinished(this, l - l % 24000L, this.func_72820_D()));
          }
 
          this.func_229856_ab_();
@@ -338,7 +_,7 @@
       this.func_147488_Z();
       this.field_211159_Q = false;
       iprofiler.func_219895_b("entities");
-      boolean flag3 = !this.field_217491_A.isEmpty() || !this.func_217469_z().isEmpty();
+      boolean flag3 = !this.field_217491_A.isEmpty() || net.minecraftforge.common.world.ForgeChunkManager.hasForcedChunks(this); //Forge: Replace vanilla's has forced chunk check with forge's that checks both the vanilla and forge added ones
       if (flag3) {
          this.func_82742_i();
       }
@@ -349,66 +_,129 @@
          }
 
          this.field_217492_a = true;
-         ObjectIterator<Entry<Entity>> objectiterator = this.field_217498_x.int2ObjectEntrySet().iterator();
-
-         label164:
-         while(true) {
-            Entity entity1;
-            while(true) {
-               if (!objectiterator.hasNext()) {
-                  this.field_217492_a = false;
-
-                  Entity entity;
-                  while((entity = this.field_217499_z.poll()) != null) {
-                     this.func_217465_m(entity);
-                  }
-
-                  this.func_217391_K();
-                  break label164;
-               }
-
-               Entry<Entity> entry = objectiterator.next();
-               entity1 = entry.getValue();
-               Entity entity2 = entity1.func_184187_bx();
-               if (!this.field_73061_a.func_230537_U_() && (entity1 instanceof AnimalEntity || entity1 instanceof WaterMobEntity)) {
-                  entity1.func_70106_y();
-               }
-
-               if (!this.field_73061_a.func_230538_V_() && entity1 instanceof INPC) {
-                  entity1.func_70106_y();
-               }
-
-               iprofiler.func_76320_a("checkDespawn");
-               if (!entity1.field_70128_L) {
-                  entity1.func_70623_bb();
-               }
-
-               iprofiler.func_76319_b();
-               if (entity2 == null) {
-                  break;
-               }
-
-               if (entity2.field_70128_L || !entity2.func_184196_w(entity1)) {
-                  entity1.func_184210_p();
-                  break;
-               }
+         com.tuinity.tuinity.util.maplist.IteratorSafeOrderedReferenceSet.Iterator<Entity> objectiterator = this.entitiesForIteration.iterator(); // Tuinity
+         org.spigotmc.ActivationRange.activateEntities(this); // Spigot
+
+
+         while (objectiterator.hasNext()) {
+            Entity entity = (Entity) objectiterator.next(); // Tuinity
+            Entity entity1 = entity.func_184187_bx();
+
+                /* CraftBukkit start - We prevent spawning in general, so this butchering is not needed
+                if (!this.server.getSpawnAnimals() && (entity instanceof EntityAnimal || entity instanceof EntityWaterAnimal)) {
+                    entity.die();
+                }
+
+                if (!this.server.getSpawnNPCs() && entity instanceof NPC) {
+                    entity.die();
+                }
+                // CraftBukkit end */
+
+            iprofiler.func_76320_a("checkDespawn");
+            if (!entity.field_70128_L) {
+               entity.func_70623_bb();
+//               // Tuinity start - optimise notify()
+//               if (entity.inChunk && entity.valid) {
+//                  if (this.getChunkSource().isEntityTickingChunk(entity)) {
+//                     this.updateNavigatorsInRegion(entity);
+//                  }
+//               } else {
+//                  this.removeNavigatorsFromData(entity);
+//               }
+//               // Tuinity end - optimise notify()
+            }
+
+            iprofiler.func_76319_b();
+            if (entity1 != null) {
+               if (!entity1.field_70128_L && entity1.func_184196_w(entity)) {
+                  continue;
+               }
+
+               entity.func_184210_p();
             }
 
             iprofiler.func_76320_a("tick");
-            if (!entity1.field_70128_L && !(entity1 instanceof EnderDragonPartEntity)) {
-               this.func_217390_a(this::func_217479_a, entity1);
+            if (!entity.field_70128_L && !(entity.isMultipartEntity())) {
+               this.func_217390_a(this::func_217479_a, entity);
             }
 
             iprofiler.func_76319_b();
             iprofiler.func_76320_a("remove");
-            if (entity1.field_70128_L) {
-               this.func_217454_n(entity1);
-               objectiterator.remove();
-               this.func_217484_g(entity1);
+            if (entity.field_70128_L) {
+               this.func_217454_n(entity);
+               this.field_217498_x.remove(entity.func_145782_y()); // Tuinity
+               this.removeEntityComplete(entity, entity instanceof ServerPlayerEntity);
             }
+//            } else if (entity.inChunk && entity.valid) { // Tuinity start - optimise notify()
+//               if (this.getChunkProvider().isInEntityTickingChunk(entity)) {
+//                  this.updateNavigatorsInRegion(entity);
+//               }
+//            } else {
+//               this.removeNavigatorsFromData(entity);
+//            }
+//            // Tuinity end - optimise notify()
 
             iprofiler.func_76319_b();
          }
+
+//         label164:
+//         while(true) {
+//            Entity entity1;
+//            while(true) {
+//               if (!objectiterator.hasNext()) {
+//                  this.tickingEntities = false;
+//
+//                  Entity entity;
+//                  while((entity = this.toAddAfterTick.poll()) != null) {
+//                     this.add(entity);
+//                  }
+//
+//                  this.tickBlockEntities();
+//                  break label164;
+//               }
+//
+//               Entry<Entity> entry = objectiterator.next();
+//               entity1 = entry.getValue();
+//               Entity entity2 = entity1.getVehicle();
+//               if (!this.server.isSpawningAnimals() && (entity1 instanceof AnimalEntity || entity1 instanceof WaterMobEntity)) {
+//                  entity1.remove();
+//               }
+//
+//               if (!this.server.areNpcsEnabled() && entity1 instanceof INPC) {
+//                  entity1.remove();
+//               }
+//
+//               iprofiler.push("checkDespawn");
+//               if (!entity1.removed) {
+//                  entity1.checkDespawn();
+//               }
+//
+//               iprofiler.pop();
+//               if (entity2 == null) {
+//                  break;
+//               }
+//
+//               if (entity2.removed || !entity2.hasPassenger(entity1)) {
+//                  entity1.stopRiding();
+//                  break;
+//               }
+//            }
+//
+//            iprofiler.push("tick");
+//            if (!entity1.removed && !(entity1 instanceof net.minecraftforge.entity.PartEntity)) {
+//               this.guardEntityTick(this::tickNonPassenger, entity1);
+//            }
+//
+//            iprofiler.pop();
+//            iprofiler.push("remove");
+//            if (entity1.removed) {
+//               this.removeFromChunk(entity1);
+//               objectiterator.remove();
+//               this.removeEntityComplete(entity1, entity1 instanceof ServerPlayerEntity); //Forge: Keep cap data until revive. Every other entity removes directly.
+//            }
+//
+//            iprofiler.pop();
+//         }
       }
 
       iprofiler.func_76319_b();
@@ -418,6 +_,8 @@
       if (this.field_241107_Q_) {
          long i = this.field_72986_A.func_82573_f() + 1L;
          this.field_241103_E_.func_82572_b(i);
+         this.field_94579_S.nextTick(); // Paper
+         this.field_205342_P.nextTick(); // Paper
          this.field_241103_E_.func_215763_z().func_216331_a(this.field_73061_a, i);
          if (this.field_72986_A.func_82574_x().func_223586_b(GameRules.field_223607_j)) {
             this.func_241114_a_(this.field_72986_A.func_76073_f() + 1L);
@@ -438,79 +_,115 @@
    }
 
    private void func_229856_ab_() {
-      this.field_217491_A.stream().filter(LivingEntity::func_70608_bn).collect(Collectors.toList()).forEach((p_241131_0_) -> {
-         p_241131_0_.func_225652_a_(false, false);
-      });
+      for (ServerPlayerEntity entityplayer : field_217491_A) { if (entityplayer.func_70608_bn()) { // Yatopia
+         entityplayer.func_225652_a_(false, false);
+      }} // Yatopia
    }
 
-   public void func_217441_a(Chunk p_217441_1_, int p_217441_2_) {
+   // GoldenForge - Paper/Tuinity/Airplane - optimise random block ticking
+   private final BlockPos.Mutable chunkTickMutablePosition = new BlockPos.Mutable();
+   private final com.destroystokyo.paper.util.math.ThreadUnsafeRandom randomTickRandom = new com.destroystokyo.paper.util.math.ThreadUnsafeRandom();
+   private int currentIceAndSnowTick = 0; protected void resetIceAndSnowTick() { this.currentIceAndSnowTick = this.randomTickRandom.nextInt(16); } // Airplane
+   private final Biome[] biomeBaseCache = new Biome[1];
+   // GoldenForge end
+
+   public void func_217441_a(Chunk p_217441_1_, int p_217441_2_) { final int randomTickSpeed = p_217441_2_; // Paper
       ChunkPos chunkpos = p_217441_1_.func_76632_l();
       boolean flag = this.func_72896_J();
       int i = chunkpos.func_180334_c();
       int j = chunkpos.func_180333_d();
       IProfiler iprofiler = this.func_217381_Z();
       iprofiler.func_76320_a("thunder");
-      if (flag && this.func_72911_I() && this.field_73012_v.nextInt(100000) == 0) {
-         BlockPos blockpos = this.func_175736_a(this.func_217383_a(i, 0, j, 15));
-         if (this.func_175727_C(blockpos)) {
-            DifficultyInstance difficultyinstance = this.func_175649_E(blockpos);
-            boolean flag1 = this.func_82736_K().func_223586_b(GameRules.field_223601_d) && this.field_73012_v.nextDouble() < (double)difficultyinstance.func_180168_b() * 0.01D;
+      final BlockPos.Mutable blockposition = this.chunkTickMutablePosition; // Paper - use mutable to reduce allocation rate, final to force compile fail on change
+
+      if (!this.paperConfig.disableThunder && flag && p_217441_1_.shouldDoLightning(this.field_73012_v) && this.func_72911_I()) { // Paper - Disable thunder // Airplane - check this.W last // Airplane - replace random with shouldDoLighting
+         blockposition.func_189533_g(this.func_175736_a(this.func_217383_a(i, 0, j, 15))); // Paper
+         if (this.func_175727_C(blockposition)) {
+            DifficultyInstance difficultyinstance = this.func_175649_E(blockposition);
+            boolean flag1 = this.func_82736_K().func_223586_b(GameRules.field_223601_d) && this.field_73012_v.nextDouble() < (double)difficultyinstance.func_180168_b() *  paperConfig.skeleHorseSpawnChance; // Paper
             if (flag1) {
                SkeletonHorseEntity skeletonhorseentity = EntityType.field_200742_ah.func_200721_a(this);
                skeletonhorseentity.func_190691_p(true);
                skeletonhorseentity.func_70873_a(0);
-               skeletonhorseentity.func_70107_b((double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p());
+               skeletonhorseentity.func_70107_b((double)blockposition.func_177958_n(), (double)blockposition.func_177956_o(), (double)blockposition.func_177952_p());
                this.func_217376_c(skeletonhorseentity);
             }
 
             LightningBoltEntity lightningboltentity = EntityType.field_200728_aG.func_200721_a(this);
-            lightningboltentity.func_233576_c_(Vector3d.func_237492_c_(blockpos));
+            lightningboltentity.func_233576_c_(Vector3d.func_237492_c_(blockposition));
             lightningboltentity.func_233623_a_(flag1);
             this.func_217376_c(lightningboltentity);
          }
       }
 
       iprofiler.func_219895_b("iceandsnow");
-      if (this.field_73012_v.nextInt(16) == 0) {
-         BlockPos blockpos2 = this.func_205770_a(Heightmap.Type.MOTION_BLOCKING, this.func_217383_a(i, 0, j, 15));
-         BlockPos blockpos3 = blockpos2.func_177977_b();
-         Biome biome = this.func_226691_t_(blockpos2);
-         if (biome.func_201848_a(this, blockpos3)) {
-            this.func_175656_a(blockpos3, Blocks.field_150432_aD.func_176223_P());
-         }
-
-         if (flag && biome.func_201850_b(this, blockpos2)) {
-            this.func_175656_a(blockpos2, Blocks.field_150433_aE.func_176223_P());
-         }
-
-         if (flag && this.func_226691_t_(blockpos3).func_201851_b() == Biome.RainType.RAIN) {
-            this.func_180495_p(blockpos3).func_177230_c().func_176224_k(this, blockpos3);
+      if (!this.paperConfig.disableIceAndSnow && (this.currentIceAndSnowTick++ & 15) == 0) { // Paper - Disable ice and snow // Paper - optimise random ticking // Airplane - optimize further random ticking
+         // Paper start - optimise chunk ticking
+         // Tuinity start - optimise chunk ice snow ticking
+         Biome[] biomeCache = this.biomeBaseCache;
+         biomeCache[0] = null;
+         // Tuinity start - optimise chunk ice snow ticking
+         this.getRandomBlockPosition(i, 0, j, 15, blockposition);
+         int normalY = p_217441_1_.func_201576_a(Heightmap.Type.MOTION_BLOCKING, blockposition.func_177958_n() & 15, blockposition.func_177952_p() & 15);
+         int downY = normalY - 1;
+         blockposition.func_185336_p(normalY);
+         // Paper end
+
+         blockposition.func_185336_p(downY);
+         if (Biome.shouldFreeze(this, blockposition, true, p_217441_1_, biomeCache)) { // Tuinity - add chunk parameter, avoid biome lookup
+            this.func_175656_a(blockposition, Blocks.field_150432_aD.func_176223_P());
+         }
+
+         blockposition.func_185336_p(normalY); // Paper
+         if (flag && Biome.shouldSnow(this, blockposition, p_217441_1_, biomeCache)) {
+            this.func_175656_a(blockposition, Blocks.field_150433_aE.func_176223_P());
+         }
+
+         // Paper start - optimise chunk ticking
+         blockposition.func_185336_p(downY);
+         if (flag && p_217441_1_.func_180495_p(blockposition).func_177230_c() instanceof CauldronBlock && this.func_226691_t_(blockposition).func_201851_b() == Biome.RainType.RAIN) { // Tuinity - only cauldron uses that method, and it's not likely to hit. So, avoid the expensive biome lookup and replace it with a block lookup TODO check on update for overrides
+            this.func_180495_p(blockposition).func_177230_c().func_176224_k(this, blockposition);
          }
       }
 
-      iprofiler.func_219895_b("tickBlocks");
+      iprofiler.func_76319_b();
       if (p_217441_2_ > 0) {
-         for(ChunkSection chunksection : p_217441_1_.func_76587_i()) {
-            if (chunksection != Chunk.field_186036_a && chunksection.func_206915_b()) {
-               int k = chunksection.func_222632_g();
-
-               for(int l = 0; l < p_217441_2_; ++l) {
-                  BlockPos blockpos1 = this.func_217383_a(i, k, j, 15);
-                  iprofiler.func_76320_a("randomTick");
-                  BlockState blockstate = chunksection.func_177485_a(blockpos1.func_177958_n() - i, blockpos1.func_177956_o() - k, blockpos1.func_177952_p() - j);
-                  if (blockstate.func_204519_t()) {
-                     blockstate.func_227034_b_(this, blockpos1, this.field_73012_v);
-                  }
-
-                  FluidState fluidstate = blockstate.func_204520_s();
-                  if (fluidstate.func_206890_h()) {
-                     fluidstate.func_206891_b(this, blockpos1, this.field_73012_v);
-                  }
-
-                  iprofiler.func_76319_b();
+         iprofiler.func_76320_a("randomTick");
+
+         ChunkSection[] sections = p_217441_1_.func_76587_i();
+
+         for (int sectionIndex = 0; sectionIndex < 16; ++sectionIndex) {
+            ChunkSection section = sections[sectionIndex];
+            if (section == null || section.tickingList.size() == 0) {
+               continue;
+            }
+
+            int yPos = sectionIndex << 4;
+
+            for (int a = 0; a < randomTickSpeed; ++a) {
+               int tickingBlocks = section.tickingList.size();
+               int index = this.randomTickRandom.nextInt(16 * 16 * 16);
+               if (index >= tickingBlocks) {
+                  continue;
                }
+
+               long raw = section.tickingList.getRaw(index);
+               int location = com.destroystokyo.paper.util.maplist.IBlockDataList.getLocationFromRaw(raw);
+               int randomX = location & 15;
+               int randomY = ((location >>> (4 + 4)) & 255) | yPos;
+               int randomZ = (location >>> 4) & 15;
+
+               BlockPos blockposition2 = blockposition.func_181079_c(i + randomX, randomY, j + randomZ);
+               BlockState iblockdata = com.destroystokyo.paper.util.maplist.IBlockDataList.getBlockDataFromRaw(raw);
+
+               iblockdata.func_227034_b_(this, blockposition2, this.randomTickRandom);
+
+               // We drop the fluid tick since LAVA is ALREADY TICKED by the above method.
+               // TODO CHECK ON UPDATE
             }
          }
+         iprofiler.func_76319_b();
+         // Paper end
       }
 
       iprofiler.func_76319_b();
@@ -591,6 +_,7 @@
       if (!(p_217479_1_ instanceof PlayerEntity) && !this.func_72863_F().func_217204_a(p_217479_1_)) {
          this.func_217464_b(p_217479_1_);
       } else {
+         final boolean isActive = org.spigotmc.ActivationRange.checkIfActive(p_217479_1_);
          p_217479_1_.func_226286_f_(p_217479_1_.func_226277_ct_(), p_217479_1_.func_226278_cu_(), p_217479_1_.func_226281_cx_());
          p_217479_1_.field_70126_B = p_217479_1_.field_70177_z;
          p_217479_1_.field_70127_C = p_217479_1_.field_70125_A;
@@ -598,10 +_,15 @@
             ++p_217479_1_.field_70173_aa;
             IProfiler iprofiler = this.func_217381_Z();
             iprofiler.func_194340_a(() -> {
-               return Registry.field_212629_r.func_177774_c(p_217479_1_.func_200600_R()).toString();
+               return p_217479_1_.func_200600_R().getRegistryName() == null ? p_217479_1_.func_200600_R().toString() : p_217479_1_.func_200600_R().getRegistryName().toString();
             });
             iprofiler.func_230035_c_("tickNonPassenger");
-            p_217479_1_.func_70071_h_();
+            if (isActive) {
+               if (p_217479_1_.canUpdate())
+                  p_217479_1_.func_70071_h_();
+            } else {
+               p_217479_1_.inactiveTick();
+            }
             iprofiler.func_76319_b();
          }
 
@@ -618,6 +_,7 @@
    public void func_217459_a(Entity p_217459_1_, Entity p_217459_2_) {
       if (!p_217459_2_.field_70128_L && p_217459_2_.func_184187_bx() == p_217459_1_) {
          if (p_217459_2_ instanceof PlayerEntity || this.func_72863_F().func_217204_a(p_217459_2_)) {
+            final boolean isActive = org.spigotmc.ActivationRange.checkIfActive(p_217459_2_);
             p_217459_2_.func_226286_f_(p_217459_2_.func_226277_ct_(), p_217459_2_.func_226278_cu_(), p_217459_2_.func_226281_cx_());
             p_217459_2_.field_70126_B = p_217459_2_.field_70177_z;
             p_217459_2_.field_70127_C = p_217459_2_.field_70125_A;
@@ -628,7 +_,13 @@
                   return Registry.field_212629_r.func_177774_c(p_217459_2_.func_200600_R()).toString();
                });
                iprofiler.func_230035_c_("tickPassenger");
-               p_217459_2_.func_70098_U();
+               if (isActive) {
+                  p_217459_2_.func_70098_U();
+               } else {
+                  p_217459_2_.func_213317_d(Vector3d.field_186680_a);
+                  p_217459_2_.inactiveTick();
+                  p_217459_1_.func_184232_k(p_217459_2_);
+               }
                iprofiler.func_76319_b();
             }
 
@@ -687,6 +_,7 @@
             p_217445_1_.func_200209_c(new TranslationTextComponent("menu.savingChunks"));
          }
 
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Save(this));
          serverchunkprovider.func_217210_a(p_217445_2_);
       }
    }
@@ -777,6 +_,7 @@
    }
 
    private void func_217448_f(ServerPlayerEntity p_217448_1_) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_217448_1_, this))) return;
       Entity entity = this.field_175741_N.get(p_217448_1_.func_110124_au());
       if (entity != null) {
          field_147491_a.warn("Force-added player with duplicate UUID {}", (Object)p_217448_1_.func_110124_au().toString());
@@ -801,6 +_,7 @@
       } else if (this.func_217478_l(p_72838_1_)) {
          return false;
       } else {
+         if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_72838_1_, this))) return false;
          IChunk ichunk = this.func_217353_a(MathHelper.func_76128_c(p_72838_1_.func_226277_ct_() / 16.0D), MathHelper.func_76128_c(p_72838_1_.func_226281_cx_() / 16.0D), ChunkStatus.field_222617_m, p_72838_1_.field_98038_p);
          if (!(ichunk instanceof Chunk)) {
             return false;
@@ -816,6 +_,7 @@
       if (this.func_217478_l(p_217440_1_)) {
          return false;
       } else {
+         if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_217440_1_, this))) return false;
          this.func_217465_m(p_217440_1_);
          return true;
       }
@@ -867,7 +_,7 @@
       for(int j = 0; j < i; ++j) {
          for(Entity entity : aclassinheritancemultimap[j]) {
             if (!(entity instanceof ServerPlayerEntity)) {
-               if (this.field_217492_a) {
+               if (false && this.field_217492_a) { // Tuinity
                   throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
                }
 
@@ -879,12 +_,19 @@
 
    }
 
+   @Deprecated //Forge: Use removeEntityComplete(entity,boolean)
    public void func_217484_g(Entity p_217484_1_) {
-      if (p_217484_1_ instanceof EnderDragonEntity) {
-         for(EnderDragonPartEntity enderdragonpartentity : ((EnderDragonEntity)p_217484_1_).func_213404_dT()) {
-            enderdragonpartentity.func_70106_y();
+      removeEntityComplete(p_217484_1_, false);
+   }
+   public void removeEntityComplete(Entity p_217484_1_, boolean keepData) {
+      org.spigotmc.AsyncCatcher.catchOp("entity unregister"); // Spigot
+      this.entitiesForIteration.remove(p_217484_1_); // Tuinity
+      if (p_217484_1_.isMultipartEntity()) {
+         for(net.minecraftforge.entity.PartEntity<?> enderdragonpartentity : p_217484_1_.getParts()) {
+            enderdragonpartentity.remove(keepData);
          }
       }
+      p_217484_1_.remove(keepData);
 
       this.field_175741_N.remove(p_217484_1_.func_110124_au());
       this.func_72863_F().func_217226_b(p_217484_1_);
@@ -898,16 +_,29 @@
          this.field_217495_I.remove(((MobEntity)p_217484_1_).func_70661_as());
       }
 
+      p_217484_1_.onRemovedFromWorld();
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityLeaveWorldEvent(p_217484_1_, this));
    }
 
    private void func_217465_m(Entity p_217465_1_) {
-      if (this.field_217492_a) {
+      org.spigotmc.AsyncCatcher.catchOp("entity register"); // Spigot
+      // Paper start - don't double enqueue entity registration
+      //noinspection ObjectEquality
+      if (this.field_217498_x.get(p_217465_1_.func_145782_y()) == p_217465_1_) {
+         field_147491_a.error(p_217465_1_ + " was already registered!");
+         new Throwable().printStackTrace();
+         return;
+      }
+      // Paper end
+      if (false && this.field_217492_a) { // Tuinity
          this.field_217499_z.add(p_217465_1_);
       } else {
          this.field_217498_x.put(p_217465_1_.func_145782_y(), p_217465_1_);
-         if (p_217465_1_ instanceof EnderDragonEntity) {
-            for(EnderDragonPartEntity enderdragonpartentity : ((EnderDragonEntity)p_217465_1_).func_213404_dT()) {
+         this.entitiesForIteration.add(p_217465_1_); // Tuinity
+         if (p_217465_1_.isMultipartEntity()) {
+            for(net.minecraftforge.entity.PartEntity<?> enderdragonpartentity : p_217465_1_.getParts()) {
                this.field_217498_x.put(enderdragonpartentity.func_145782_y(), enderdragonpartentity);
+               this.entitiesForIteration.add(enderdragonpartentity); // Tuinity
             }
          }
 
@@ -918,15 +_,19 @@
          }
       }
 
+      p_217465_1_.onAddedToWorld();
    }
 
    public void func_217467_h(Entity p_217467_1_) {
-      if (this.field_217492_a) {
+      removeEntity(p_217467_1_, false);
+   }
+   public void removeEntity(Entity p_217467_1_, boolean keepData) {
+      if (false && this.field_217492_a) {
          throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
       } else {
          this.func_217454_n(p_217467_1_);
          this.field_217498_x.remove(p_217467_1_.func_145782_y());
-         this.func_217484_g(p_217467_1_);
+         this.removeEntityComplete(p_217467_1_, keepData);
       }
    }
 
@@ -939,8 +_,11 @@
    }
 
    public void func_217434_e(ServerPlayerEntity p_217434_1_) {
-      p_217434_1_.func_70106_y();
-      this.func_217467_h(p_217434_1_);
+      removePlayer(p_217434_1_, false);
+   }
+   public void removePlayer(ServerPlayerEntity p_217434_1_, boolean keepData) {
+      p_217434_1_.remove(keepData);
+      this.removeEntity(p_217434_1_, keepData);
       this.func_72854_c();
    }
 
@@ -959,10 +_,20 @@
    }
 
    public void func_184148_a(@Nullable PlayerEntity p_184148_1_, double p_184148_2_, double p_184148_4_, double p_184148_6_, SoundEvent p_184148_8_, SoundCategory p_184148_9_, float p_184148_10_, float p_184148_11_) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(p_184148_1_, p_184148_8_, p_184148_9_, p_184148_10_, p_184148_11_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_184148_8_ = event.getSound();
+      p_184148_9_ = event.getCategory();
+      p_184148_10_ = event.getVolume();
       this.field_73061_a.func_184103_al().func_148543_a(p_184148_1_, p_184148_2_, p_184148_4_, p_184148_6_, p_184148_10_ > 1.0F ? (double)(16.0F * p_184148_10_) : 16.0D, this.func_234923_W_(), new SPlaySoundEffectPacket(p_184148_8_, p_184148_9_, p_184148_2_, p_184148_4_, p_184148_6_, p_184148_10_, p_184148_11_));
    }
 
    public void func_217384_a(@Nullable PlayerEntity p_217384_1_, Entity p_217384_2_, SoundEvent p_217384_3_, SoundCategory p_217384_4_, float p_217384_5_, float p_217384_6_) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(p_217384_1_, p_217384_3_, p_217384_4_, p_217384_5_, p_217384_6_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_217384_3_ = event.getSound();
+      p_217384_4_ = event.getCategory();
+      p_217384_5_ = event.getVolume();
       this.field_73061_a.func_184103_al().func_148543_a(p_217384_1_, p_217384_2_.func_226277_ct_(), p_217384_2_.func_226278_cu_(), p_217384_2_.func_226281_cx_(), p_217384_5_ > 1.0F ? (double)(16.0F * p_217384_5_) : 16.0D, this.func_234923_W_(), new SSpawnMovingSoundEffectPacket(p_217384_3_, p_217384_4_, p_217384_2_, p_217384_5_, p_217384_6_));
    }
 
@@ -998,6 +_,7 @@
 
    public Explosion func_230546_a_(@Nullable Entity p_230546_1_, @Nullable DamageSource p_230546_2_, @Nullable ExplosionContext p_230546_3_, double p_230546_4_, double p_230546_6_, double p_230546_8_, float p_230546_10_, boolean p_230546_11_, Explosion.Mode p_230546_12_) {
       Explosion explosion = new Explosion(this, p_230546_1_, p_230546_2_, p_230546_3_, p_230546_4_, p_230546_6_, p_230546_8_, p_230546_10_, p_230546_11_, p_230546_12_);
+      if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
       explosion.func_77278_a();
       explosion.func_77279_a(false);
       if (p_230546_12_ == Explosion.Mode.NONE) {
@@ -1409,5 +_,15 @@
       BlockPos.func_191531_b(i - 2, j, k - 2, i + 2, j, k + 2).forEach((p_241122_1_) -> {
          p_241121_0_.func_175656_a(p_241122_1_, Blocks.field_150343_Z.func_176223_P());
       });
+   }
+
+   protected void initCapabilities() {
+      this.gatherCapabilities();
+      capabilityData = this.func_217481_x().func_215752_a(() -> new net.minecraftforge.common.util.WorldCapabilityData(getCapabilities()), net.minecraftforge.common.util.WorldCapabilityData.ID);
+      capabilityData.setCapabilities(getCapabilities());
+   }
+
+   public java.util.stream.Stream<Entity> getEntities() {
+       return field_217498_x.values().stream();
    }
 }
