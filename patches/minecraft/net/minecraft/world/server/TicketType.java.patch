--- a/net/minecraft/world/server/TicketType.java
+++ b/net/minecraft/world/server/TicketType.java
@@ -9,7 +_,7 @@
 public class TicketType<T> {
    private final String field_219495_h;
    private final Comparator<T> field_219496_i;
-   private final long field_223186_k;
+   public long field_223186_k;
    public static final TicketType<Unit> field_219488_a = func_219484_a("start", (p_219486_0_, p_219486_1_) -> {
       return 0;
    });
@@ -22,6 +_,27 @@
    public static final TicketType<BlockPos> field_219493_f = func_223183_a("portal", Vector3i::compareTo, 300);
    public static final TicketType<Integer> field_223185_g = func_223183_a("post_teleport", Integer::compareTo, 5);
    public static final TicketType<ChunkPos> field_219494_g = func_223183_a("unknown", Comparator.comparingLong(ChunkPos::func_201841_a), 1);
+
+   public static final TicketType<Long> LOGIN = func_223183_a("login", Long::compareTo, 100); // Paper
+   public static final TicketType<Long> FUTURE_AWAIT = func_219484_a("future_await", Long::compareTo); // Paper
+   public static final TicketType<Long> ASYNC_LOAD = func_219484_a("async_load", Long::compareTo); // Paper
+   public static final TicketType<ChunkPos> PRIORITY = func_223183_a("priority", Comparator.comparingLong(ChunkPos::func_201841_a), 300); // Paper
+   public static final TicketType<ChunkPos> URGENT = func_223183_a("urgent", Comparator.comparingLong(ChunkPos::func_201841_a), 300); // Paper
+   public static final TicketType<Long> DELAYED_UNLOAD = func_219484_a("delayed_unload", Long::compareTo); // Tuinity - delay chunk unloads
+   public static final TicketType<Long> REQUIRED_LOAD = func_219484_a("required_load", Long::compareTo); // Tuinity - make sure getChunkAt does not fail
+   public static final TicketType<ChunkPos> LIGHT_UPDATE = func_219484_a("light_update", Comparator.comparingLong(ChunkPos::func_201841_a)); // Tuinity - ensure chunks stay loaded for lighting
+   public static final TicketType<Long> CHUNK_RELIGHT = func_219484_a("chunk_relight", Long::compareTo); // Tuinity - ensure chunk stays loaded for relighting
+
+   // Tuinity start - delay chunk unloads
+   boolean delayUnloadViable = true;
+   static {
+      TicketType.field_219492_e.delayUnloadViable = false;
+      TicketType.PRIORITY.delayUnloadViable = false;
+      TicketType.URGENT.delayUnloadViable = false;
+      TicketType.DELAYED_UNLOAD.delayUnloadViable = false;
+      TicketType.LIGHT_UPDATE.delayUnloadViable = false; // Tuinity - ensure chunks stay loaded for lighting
+   }
+   // Tuinity end - delay chunk unloads
 
    public static <T> TicketType<T> func_219484_a(String p_219484_0_, Comparator<T> p_219484_1_) {
       return new TicketType<>(p_219484_0_, p_219484_1_, 0L);
