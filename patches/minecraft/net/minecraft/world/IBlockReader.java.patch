--- a/net/minecraft/world/IBlockReader.java
+++ b/net/minecraft/world/IBlockReader.java
@@ -5,6 +_,8 @@
 import java.util.function.Supplier;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+
+import net.minecraft.block.Block;
 import net.minecraft.block.BlockState;
 import net.minecraft.fluid.FluidState;
 import net.minecraft.tileentity.TileEntity;
@@ -22,11 +_,20 @@
    TileEntity func_175625_s(BlockPos p_175625_1_);
 
    BlockState func_180495_p(BlockPos p_180495_1_);
+   // Paper start - if loaded util
+   BlockState getTypeIfLoaded(BlockPos blockposition);
+
+   default Block getBlockIfLoaded(BlockPos blockposition) {
+      BlockState type = this.getTypeIfLoaded(blockposition);
+      return type == null ? null : type.func_177230_c();
+   }
+   FluidState getFluidIfLoaded(BlockPos blockposition);
+   // Paper end
 
    FluidState func_204610_c(BlockPos p_204610_1_);
 
    default int func_217298_h(BlockPos p_217298_1_) {
-      return this.func_180495_p(p_217298_1_).func_185906_d();
+      return this.func_180495_p(p_217298_1_).getLightValue(this, p_217298_1_);
    }
 
    default int func_201572_C() {
@@ -41,23 +_,55 @@
       return BlockPos.func_239581_a_(p_234853_1_).map(this::func_180495_p);
    }
 
+   // CraftBukkit start - moved block handling into separate method for use by Block#rayTrace
+   default BlockRayTraceResult rayTraceBlock(RayTraceContext raytrace1, BlockPos blockposition) {
+      // Paper start - Prevent raytrace from loading chunks
+      BlockState iblockdata = this.getTypeIfLoaded(blockposition);
+      if (iblockdata == null) {
+         // copied the last function parameter (listed below)
+         Vector3d vec3d = raytrace1.func_222253_b().func_178788_d(raytrace1.func_222250_a());
+
+         return BlockRayTraceResult.func_216352_a(raytrace1.func_222250_a(), Direction.func_210769_a(vec3d.field_72450_a, vec3d.field_72448_b, vec3d.field_72449_c), new BlockPos(raytrace1.func_222250_a()));
+      }
+      // Paper end
+      FluidState fluid = this.func_204610_c(blockposition);
+      Vector3d vec3d = raytrace1.func_222253_b();
+      Vector3d vec3d1 = raytrace1.func_222250_a();
+      VoxelShape voxelshape = raytrace1.func_222251_a(iblockdata, this, blockposition);
+      BlockRayTraceResult movingobjectpositionblock = this.func_217296_a(vec3d, vec3d1, blockposition, voxelshape, iblockdata);
+      VoxelShape voxelshape1 = raytrace1.func_222252_a(fluid, this, blockposition);
+      BlockRayTraceResult movingobjectpositionblock1 = voxelshape1.func_212433_a(vec3d, vec3d1, blockposition);
+      double d0 = movingobjectpositionblock == null ? Double.MAX_VALUE : raytrace1.func_222253_b().func_72436_e(movingobjectpositionblock.func_216347_e());
+      double d1 = movingobjectpositionblock1 == null ? Double.MAX_VALUE : raytrace1.func_222250_a().func_72436_e(movingobjectpositionblock1.func_216347_e());
+
+      return d0 <= d1 ? movingobjectpositionblock : movingobjectpositionblock1;
+   }
+   // CraftBukkit end
+
    default BlockRayTraceResult func_217299_a(RayTraceContext p_217299_1_) {
-      return func_217300_a(p_217299_1_, (p_217297_1_, p_217297_2_) -> {
-         BlockState blockstate = this.func_180495_p(p_217297_2_);
-         FluidState fluidstate = this.func_204610_c(p_217297_2_);
-         Vector3d vector3d = p_217297_1_.func_222253_b();
-         Vector3d vector3d1 = p_217297_1_.func_222250_a();
-         VoxelShape voxelshape = p_217297_1_.func_222251_a(blockstate, this, p_217297_2_);
-         BlockRayTraceResult blockraytraceresult = this.func_217296_a(vector3d, vector3d1, p_217297_2_, voxelshape, blockstate);
-         VoxelShape voxelshape1 = p_217297_1_.func_222252_a(fluidstate, this, p_217297_2_);
-         BlockRayTraceResult blockraytraceresult1 = voxelshape1.func_212433_a(vector3d, vector3d1, p_217297_2_);
-         double d0 = blockraytraceresult == null ? Double.MAX_VALUE : p_217297_1_.func_222253_b().func_72436_e(blockraytraceresult.func_216347_e());
-         double d1 = blockraytraceresult1 == null ? Double.MAX_VALUE : p_217297_1_.func_222253_b().func_72436_e(blockraytraceresult1.func_216347_e());
-         return d0 <= d1 ? blockraytraceresult : blockraytraceresult1;
-      }, (p_217302_0_) -> {
-         Vector3d vector3d = p_217302_0_.func_222253_b().func_178788_d(p_217302_0_.func_222250_a());
-         return BlockRayTraceResult.func_216352_a(p_217302_0_.func_222250_a(), Direction.func_210769_a(vector3d.field_72450_a, vector3d.field_72448_b, vector3d.field_72449_c), new BlockPos(p_217302_0_.func_222250_a()));
+      return (BlockRayTraceResult) func_217300_a(p_217299_1_, (raytrace1, blockposition) -> {
+         return this.rayTraceBlock(raytrace1, blockposition); // CraftBukkit - moved into separate method
+      }, (raytrace1) -> {
+         Vector3d vec3d = raytrace1.func_222253_b().func_178788_d(raytrace1.func_222250_a());
+
+         return BlockRayTraceResult.func_216352_a(raytrace1.func_222250_a(), Direction.func_210769_a(vec3d.field_72450_a, vec3d.field_72448_b, vec3d.field_72449_c), new BlockPos(raytrace1.func_222250_a()));
       });
+//      return traverseBlocks(p_217299_1_, (p_217297_1_, p_217297_2_) -> {
+//         BlockState blockstate = this.getBlockState(p_217297_2_);
+//         FluidState fluidstate = this.getFluidState(p_217297_2_);
+//         Vector3d vector3d = p_217297_1_.getFrom();
+//         Vector3d vector3d1 = p_217297_1_.getTo();
+//         VoxelShape voxelshape = p_217297_1_.getBlockShape(blockstate, this, p_217297_2_);
+//         BlockRayTraceResult blockraytraceresult = this.clipWithInteractionOverride(vector3d, vector3d1, p_217297_2_, voxelshape, blockstate);
+//         VoxelShape voxelshape1 = p_217297_1_.getFluidShape(fluidstate, this, p_217297_2_);
+//         BlockRayTraceResult blockraytraceresult1 = voxelshape1.clip(vector3d, vector3d1, p_217297_2_);
+//         double d0 = blockraytraceresult == null ? Double.MAX_VALUE : p_217297_1_.getFrom().distanceToSqr(blockraytraceresult.getLocation());
+//         double d1 = blockraytraceresult1 == null ? Double.MAX_VALUE : p_217297_1_.getFrom().distanceToSqr(blockraytraceresult1.getLocation());
+//         return d0 <= d1 ? blockraytraceresult : blockraytraceresult1;
+//      }, (p_217302_0_) -> {
+//         Vector3d vector3d = p_217302_0_.getFrom().subtract(p_217302_0_.getTo());
+//         return BlockRayTraceResult.miss(p_217302_0_.getTo(), Direction.getNearest(vector3d.x, vector3d.y, vector3d.z), new BlockPos(p_217302_0_.getTo()));
+//      });
    }
 
    @Nullable
