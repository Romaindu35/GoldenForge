--- a/net/minecraft/world/biome/Biome.java
+++ b/net/minecraft/world/biome/Biome.java
@@ -53,7 +_,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public final class Biome {
+public final class Biome extends net.minecraftforge.registries.ForgeRegistryEntry.UncheckedRegistryEntry<Biome> {
    public static final Logger field_150586_aC = LogManager.getLogger();
    public static final Codec<Biome> field_242418_b = RecordCodecBuilder.create((p_235064_0_) -> {
       return p_235064_0_.group(Biome.Climate.field_242459_a.forGetter((p_242446_0_) -> {
@@ -70,7 +_,9 @@
          return p_242443_0_.field_242424_k;
       }), MobSpawnInfo.field_242552_c.forGetter((p_242442_0_) -> {
          return p_242442_0_.field_242425_l;
-      })).apply(p_235064_0_, Biome::new);
+      }), ResourceLocation.field_240908_a_.optionalFieldOf("forge:registry_name").forGetter(b -> Optional.ofNullable(b.getRegistryName())))
+      .apply(p_235064_0_, (climate, category, depth, scale, effects, gen, spawns, name) ->
+          net.minecraftforge.common.ForgeHooks.enhanceBiome(name.orElse(null), climate, category, depth, scale, effects, gen, spawns, p_235064_0_, Biome::new));
    });
    public static final Codec<Biome> field_242419_c = RecordCodecBuilder.create((p_242432_0_) -> {
       return p_242432_0_.group(Biome.Climate.field_242459_a.forGetter((p_242441_0_) -> {
@@ -172,13 +_,31 @@
    }
 
    public boolean func_201854_a(IWorldReader p_201854_1_, BlockPos p_201854_2_, boolean p_201854_3_) {
-      if (this.func_225486_c(p_201854_2_) >= 0.15F) {
+      return shouldFreeze(p_201854_1_, p_201854_2_, p_201854_3_, null, new Biome[]  { this });
+   }
+
+   public static boolean shouldFreeze(IWorldReader p_201854_1_, BlockPos p_201854_2_, boolean p_201854_3_, IChunk chunk, Biome[] biomeAbove) {
+      if (false && biomeAbove[0].func_225486_c(p_201854_2_) >= 0.15F) { // Tuinity - move this down, this check is expensive
          return false;
       } else {
          if (p_201854_2_.func_177956_o() >= 0 && p_201854_2_.func_177956_o() < 256 && p_201854_1_.func_226658_a_(LightType.BLOCK, p_201854_2_) < 10) {
-            BlockState blockstate = p_201854_1_.func_180495_p(p_201854_2_);
-            FluidState fluidstate = p_201854_1_.func_204610_c(p_201854_2_);
+            // Tuinity start - add chunk parameter
+            if (chunk == null) {
+               chunk = p_201854_1_.func_212866_a_(p_201854_2_.func_177958_n() >> 4, p_201854_2_.func_177952_p() >> 4);
+            }
+            // Tuinity end - add chunk parameter
+            BlockState blockstate = chunk.func_180495_p(p_201854_2_); // Tuinity - skip chunk lookup, we got the chunk
+            FluidState fluidstate = blockstate.func_204520_s();
             if (fluidstate.func_206886_c() == Fluids.field_204546_a && blockstate.func_177230_c() instanceof FlowingFluidBlock) {
+               // Tuinity start - moved down from top, only run when we actually encounter water
+               if (biomeAbove[0] == null) {
+                  // lazily-get biome
+                  biomeAbove[0] = p_201854_1_.func_226691_t_(p_201854_2_.func_177984_a()); // TODO - avoid blockpos alloc
+               }
+               if (biomeAbove[0].func_225486_c(p_201854_2_) >= 0.15F) {
+                  return false;
+               }
+               // Tuinity end - moved down from top, only run when we actually encounter water
                if (!p_201854_3_) {
                   return true;
                }
@@ -195,12 +_,29 @@
    }
 
    public boolean func_201850_b(IWorldReader p_201850_1_, BlockPos p_201850_2_) {
-      if (this.func_225486_c(p_201850_2_) >= 0.15F) {
+      return shouldSnow(p_201850_1_, p_201850_2_, null, new Biome[] {this});
+   }
+   public static boolean shouldSnow(IWorldReader p_201850_1_, BlockPos p_201850_2_, IChunk chunk, Biome[] biomeAbove) {
+      if (false && biomeAbove[0].func_225486_c(p_201850_2_) >= 0.15F) {
          return false;
       } else {
          if (p_201850_2_.func_177956_o() >= 0 && p_201850_2_.func_177956_o() < 256 && p_201850_1_.func_226658_a_(LightType.BLOCK, p_201850_2_) < 10) {
-            BlockState blockstate = p_201850_1_.func_180495_p(p_201850_2_);
-            if (blockstate.func_196958_f() && Blocks.field_150433_aE.func_176223_P().func_196955_c(p_201850_1_, p_201850_2_)) {
+            // Tuinity start - add chunk parameter
+            if (chunk == null) {
+               chunk = p_201850_1_.func_212866_a_(p_201850_2_.func_177958_n() >> 4, p_201850_2_.func_177952_p() >> 4);
+            }
+            // Tuinity end - add chunk parameter
+            BlockState blockstate = chunk.func_180495_p(p_201850_2_); // Tuinity - skip chunk lookup, we got the chunk
+            if (blockstate.isAir(p_201850_1_, p_201850_2_) && Blocks.field_150433_aE.func_176223_P().func_196955_c(p_201850_1_, p_201850_2_)) {
+               // Tuinity start - moved down from top, only run when we actually encounter water
+               if (biomeAbove[0] == null) {
+                  // lazily-get biome
+                  biomeAbove[0] = p_201850_1_.func_226691_t_(p_201850_2_.func_177984_a()); // TODO - avoid blockpos alloc
+               }
+               if (biomeAbove[0].func_225486_c(p_201850_2_) >= 0.15F) {
+                  return false;
+               }
+               // Tuinity end - moved down from top, only run when we actually encounter water
                return true;
             }
          }
