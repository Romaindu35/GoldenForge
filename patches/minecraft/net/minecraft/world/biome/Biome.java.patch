--- a/net/minecraft/world/biome/Biome.java
+++ b/net/minecraft/world/biome/Biome.java
@@ -47,13 +_,14 @@
 import net.minecraft.world.gen.feature.ConfiguredFeature;
 import net.minecraft.world.gen.feature.structure.Structure;
 import net.minecraft.world.gen.feature.structure.StructureManager;
+import net.minecraft.world.gen.feature.structure.StructureStart;
 import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public final class Biome {
+public final class Biome extends net.minecraftforge.registries.ForgeRegistryEntry.UncheckedRegistryEntry<Biome> {
    public static final Logger field_150586_aC = LogManager.getLogger();
    public static final Codec<Biome> field_242418_b = RecordCodecBuilder.create((p_235064_0_) -> {
       return p_235064_0_.group(Biome.Climate.field_242459_a.forGetter((p_242446_0_) -> {
@@ -70,7 +_,9 @@
          return p_242443_0_.field_242424_k;
       }), MobSpawnInfo.field_242552_c.forGetter((p_242442_0_) -> {
          return p_242442_0_.field_242425_l;
-      })).apply(p_235064_0_, Biome::new);
+      }), ResourceLocation.field_240908_a_.optionalFieldOf("forge:registry_name").forGetter(b -> Optional.ofNullable(b.getRegistryName())))
+      .apply(p_235064_0_, (climate, category, depth, scale, effects, gen, spawns, name) ->
+          net.minecraftforge.common.ForgeHooks.enhanceBiome(name.orElse(null), climate, category, depth, scale, effects, gen, spawns, p_235064_0_, Biome::new));
    });
    public static final Codec<Biome> field_242419_c = RecordCodecBuilder.create((p_242432_0_) -> {
       return p_242432_0_.group(Biome.Climate.field_242459_a.forGetter((p_242441_0_) -> {
@@ -200,7 +_,7 @@
       } else {
          if (p_201850_2_.func_177956_o() >= 0 && p_201850_2_.func_177956_o() < 256 && p_201850_1_.func_226658_a_(LightType.BLOCK, p_201850_2_) < 10) {
             BlockState blockstate = p_201850_1_.func_180495_p(p_201850_2_);
-            if (blockstate.func_196958_f() && Blocks.field_150433_aE.func_176223_P().func_196955_c(p_201850_1_, p_201850_2_)) {
+            if (blockstate.isAir(p_201850_1_, p_201850_2_) && Blocks.field_150433_aE.func_176223_P().func_196955_c(p_201850_1_, p_201850_2_)) {
                return true;
             }
          }
@@ -228,9 +_,14 @@
                int k1 = i1 << 4;
 
                try {
-                  p_242427_1_.func_235011_a_(SectionPos.func_218167_a(p_242427_7_), structure).forEach((p_242426_8_) -> {
-                     p_242426_8_.func_230366_a_(p_242427_3_, p_242427_1_, p_242427_2_, p_242427_6_, new MutableBoundingBox(j1, k1, j1 + 15, k1 + 15), new ChunkPos(l, i1));
-                  });
+//                  p_242427_1_.startsForFeature(SectionPos.of(p_242427_7_), structure).forEach((p_242426_8_) -> {
+//                     p_242426_8_.placeInChunk(p_242427_3_, p_242427_1_, p_242427_2_, p_242427_6_, new MutableBoundingBox(j1, k1, j1 + 15, k1 + 15), new ChunkPos(l, i1));
+//                  });
+                  // Paper start - remove structure streams
+                  for (StructureStart<?> structureStart : p_242427_1_.getFeatureStarts(SectionPos.func_218167_a(p_242427_7_), structure)) {
+                     structureStart.func_230366_a_(p_242427_3_, p_242427_1_, p_242427_2_, p_242427_6_, new MutableBoundingBox(j1, k1, j1 + 15, k1 + 15), new ChunkPos(l, i1));
+                  }
+                  // Paper end
                } catch (Exception exception) {
                   CrashReport crashreport = CrashReport.func_85055_a(exception, "Feature placement");
                   crashreport.func_85058_a("Feature").func_71507_a("Id", Registry.field_218361_B.func_177774_c(structure)).func_189529_a("Description", () -> {
