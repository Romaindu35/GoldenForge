--- a/net/minecraft/world/chunk/Chunk.java
+++ b/net/minecraft/world/chunk/Chunk.java
@@ -58,7 +_,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class Chunk implements IChunk {
+public class Chunk extends net.minecraftforge.common.capabilities.CapabilityProvider<Chunk> implements IChunk, net.minecraftforge.common.extensions.IForgeChunk {
    private static final Logger field_150817_t = LogManager.getLogger();
    @Nullable
    public static final ChunkSection field_186036_a = null;
@@ -84,17 +_,79 @@
    private Supplier<ChunkHolder.LocationType> field_217329_u;
    @Nullable
    private Consumer<Chunk> field_217330_v;
-   private final ChunkPos field_212816_F;
+   private final ChunkPos field_212816_F; public final long coordinateKey; public final int locX; public final int locZ; // Paper - cache coordinate key
    private volatile boolean field_217331_x;
 
+   // GoldenForge - paper entity list
+   public final com.destroystokyo.paper.util.maplist.EntityList entities = new com.destroystokyo.paper.util.maplist.EntityList();
+   // GoldenForge end
+
+   // GoldenForge - optimise ticking
+   private int lightningTick;
+   // shouldDoLightning compiles down to 29 bytes, which with the default of 35 byte inlining should guarantee an inline
+   public final boolean shouldDoLightning(java.util.Random random) {
+      if (this.lightningTick-- <= 0) {
+         this.lightningTick = random.nextInt(100000) << 1;
+         return true;
+      }
+      return false;
+   }
+   // GoldenForge end
+
+   // GoldenForge - callback
+   public void loadCallback() {
+//      // Paper start - neighbour cache
+//      int chunkX = this.loc.x;
+//      int chunkZ = this.loc.z;
+//      ChunkProviderServer chunkProvider = ((WorldServer)this.world).getChunkProvider();
+//      for (int dx = -NEIGHBOUR_CACHE_RADIUS; dx <= NEIGHBOUR_CACHE_RADIUS; ++dx) {
+//         for (int dz = -NEIGHBOUR_CACHE_RADIUS; dz <= NEIGHBOUR_CACHE_RADIUS; ++dz) {
+//            Chunk neighbour = chunkProvider.getChunkAtIfLoadedMainThreadNoCache(chunkX + dx, chunkZ + dz);
+//            if (neighbour != null) {
+//               neighbour.setNeighbourLoaded(-dx, -dz, this);
+//               // should be in cached already
+//               this.setNeighbourLoaded(dx, dz, neighbour);
+//            }
+//         }
+//      }
+//      this.setNeighbourLoaded(0, 0, this);
+//      this.loadedTicketLevel = true;
+//      // Paper end - neighbour cache
+      ((ServerWorld)this.field_76637_e).func_72863_F().addLoadedChunk(this); // Paper
+      //((WorldServer)this.world).getChunkProvider().playerChunkMap.playerChunkManager.onChunkLoad(this.loc.x, this.loc.z); // Tuinity - rewrite player chunk management
+   }
+
+   public void unloadCallback() {
+
+      ((ServerWorld)this.field_76637_e).func_72863_F().removeLoadedChunk(this); // Paper
+//      // Paper start - neighbour cache
+//      int chunkX = this.loc.x;
+//      int chunkZ = this.loc.z;
+//      ChunkProviderServer chunkProvider = ((WorldServer)this.world).getChunkProvider();
+//      for (int dx = -NEIGHBOUR_CACHE_RADIUS; dx <= NEIGHBOUR_CACHE_RADIUS; ++dx) {
+//         for (int dz = -NEIGHBOUR_CACHE_RADIUS; dz <= NEIGHBOUR_CACHE_RADIUS; ++dz) {
+//            Chunk neighbour = chunkProvider.getChunkAtIfLoadedMainThreadNoCache(chunkX + dx, chunkZ + dz);
+//            if (neighbour != null) {
+//               neighbour.setNeighbourUnloaded(-dx, -dz);
+//            }
+//         }
+//      }
+//      this.loadedTicketLevel = false;
+//      this.resetNeighbours();
+//      // Paper end
+   }
+   // GoldenForge end
+
    public Chunk(World p_i225780_1_, ChunkPos p_i225780_2_, BiomeContainer p_i225780_3_) {
       this(p_i225780_1_, p_i225780_2_, p_i225780_3_, UpgradeData.field_196994_a, EmptyTickList.func_205388_a(), EmptyTickList.func_205388_a(), 0L, (ChunkSection[])null, (Consumer<Chunk>)null);
    }
 
    public Chunk(World p_i225781_1_, ChunkPos p_i225781_2_, BiomeContainer p_i225781_3_, UpgradeData p_i225781_4_, ITickList<Block> p_i225781_5_, ITickList<Fluid> p_i225781_6_, long p_i225781_7_, @Nullable ChunkSection[] p_i225781_9_, @Nullable Consumer<Chunk> p_i225781_10_) {
+      super(Chunk.class);
       this.field_76645_j = new ClassInheritanceMultiMap[16];
       this.field_76637_e = p_i225781_1_;
-      this.field_212816_F = p_i225781_2_;
+      this.locX = p_i225781_2_.field_77276_a; this.locZ = p_i225781_2_.field_77275_b; // Paper - reduce need for field look ups
+      this.field_212816_F = p_i225781_2_; this.coordinateKey = ChunkPos.func_77272_a(locX, locZ); // Paper - cache long key
       this.field_196967_n = p_i225781_4_;
 
       for(Heightmap.Type heightmap$type : Heightmap.Type.values()) {
@@ -119,7 +_,7 @@
             field_150817_t.warn("Could not set level chunk sections, array length is {} instead of {}", p_i225781_9_.length, this.field_76652_q.length);
          }
       }
-
+      this.gatherCapabilities();
    }
 
    public Chunk(World p_i49947_1_, ChunkPrimer p_i49947_2_) {
@@ -171,40 +_,66 @@
       return this.field_76652_q;
    }
 
+   // Paper start - If loaded util
+   @Override
+   public FluidState getFluidIfLoaded(BlockPos blockposition) {
+      return this.func_204610_c(blockposition);
+   }
+
+   @Override
+   public BlockState getTypeIfLoaded(BlockPos blockposition) {
+      return this.func_180495_p(blockposition);
+   }
+   // Paper end
+
    public BlockState func_180495_p(BlockPos p_180495_1_) {
-      int i = p_180495_1_.func_177958_n();
-      int j = p_180495_1_.func_177956_o();
-      int k = p_180495_1_.func_177952_p();
-      if (this.field_76637_e.func_234925_Z_()) {
-         BlockState blockstate = null;
-         if (j == 60) {
-            blockstate = Blocks.field_180401_cv.func_176223_P();
-         }
-
-         if (j == 70) {
-            blockstate = DebugChunkGenerator.func_177461_b(i, k);
-         }
-
-         return blockstate == null ? Blocks.field_150350_a.func_176223_P() : blockstate;
-      } else {
-         try {
-            if (j >= 0 && j >> 4 < this.field_76652_q.length) {
-               ChunkSection chunksection = this.field_76652_q[j >> 4];
-               if (!ChunkSection.func_222628_a(chunksection)) {
-                  return chunksection.func_177485_a(i & 15, j & 15, k & 15);
-               }
-            }
-
-            return Blocks.field_150350_a.func_176223_P();
-         } catch (Throwable throwable) {
-            CrashReport crashreport = CrashReport.func_85055_a(throwable, "Getting block state");
-            CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being got");
-            crashreportcategory.func_189529_a("Location", () -> {
-               return CrashReportCategory.func_184876_a(i, j, k);
-            });
-            throw new ReportedException(crashreport);
-         }
+      return this.getBlockStatePaper(p_180495_1_.func_177958_n(), p_180495_1_.func_177956_o(), p_180495_1_.func_177952_p());
+//      int i = p_180495_1_.getX();
+//      int j = p_180495_1_.getY();
+//      int k = p_180495_1_.getZ();
+//      if (this.level.isDebug()) {
+//         BlockState blockstate = null;
+//         if (j == 60) {
+//            blockstate = Blocks.BARRIER.defaultBlockState();
+//         }
+//
+//         if (j == 70) {
+//            blockstate = DebugChunkGenerator.getBlockStateFor(i, k);
+//         }
+//
+//         return blockstate == null ? Blocks.AIR.defaultBlockState() : blockstate;
+//      } else {
+//         try {
+//            if (j >= 0 && j >> 4 < this.sections.length) {
+//               ChunkSection chunksection = this.sections[j >> 4];
+//               if (!ChunkSection.isEmpty(chunksection)) {
+//                  return chunksection.getBlockState(i & 15, j & 15, k & 15);
+//               }
+//            }
+//
+//            return Blocks.AIR.defaultBlockState();
+//         } catch (Throwable throwable) {
+//            CrashReport crashreport = CrashReport.forThrowable(throwable, "Getting block state");
+//            CrashReportCategory crashreportcategory = crashreport.addCategory("Block being got");
+//            crashreportcategory.setDetail("Location", () -> {
+//               return CrashReportCategory.formatLocation(i, j, k);
+//            });
+//            throw new ReportedException(crashreport);
+//         }
+//      }
+   }
+
+   public BlockState getType(final int x, final int y, final int z) {
+      return getBlockStatePaper(x, y, z);
+   }
+   public final BlockState getBlockStatePaper(final int x, final int y, final int z) {
+      // Method body / logic copied from below
+      final int i = y >> 4;
+      if (y < 0 || i >= this.field_76652_q.length || this.field_76652_q[i] == null || this.field_76652_q[i].field_76682_b == 0) {
+         return Blocks.field_150350_a.func_176223_P();
       }
+      // Inlined ChunkSection.getType() and DataPaletteBlock.a(int,int,int)
+      return this.field_76652_q[i].field_177488_d.func_186015_a((y & 15) << 8 | (z & 15) << 4 | x & 15);
    }
 
    public FluidState func_204610_c(BlockPos p_204610_1_) {
@@ -212,23 +_,50 @@
    }
 
    public FluidState func_205751_b(int p_205751_1_, int p_205751_2_, int p_205751_3_) {
-      try {
-         if (p_205751_2_ >= 0 && p_205751_2_ >> 4 < this.field_76652_q.length) {
-            ChunkSection chunksection = this.field_76652_q[p_205751_2_ >> 4];
-            if (!ChunkSection.func_222628_a(chunksection)) {
-               return chunksection.func_206914_b(p_205751_1_ & 15, p_205751_2_ & 15, p_205751_3_ & 15);
-            }
+      return this.getFluidStatePaper(p_205751_1_, p_205751_2_, p_205751_3_);
+//      try {
+//         if (p_205751_2_ >= 0 && p_205751_2_ >> 4 < this.sections.length) {
+//            ChunkSection chunksection = this.sections[p_205751_2_ >> 4];
+//            if (!ChunkSection.isEmpty(chunksection)) {
+//               return chunksection.getFluidState(p_205751_1_ & 15, p_205751_2_ & 15, p_205751_3_ & 15);
+//            }
+//         }
+//
+//         return Fluids.EMPTY.defaultFluidState();
+//      } catch (Throwable throwable) {
+//         CrashReport crashreport = CrashReport.forThrowable(throwable, "Getting fluid state");
+//         CrashReportCategory crashreportcategory = crashreport.addCategory("Block being got");
+//         crashreportcategory.setDetail("Location", () -> {
+//            return CrashReportCategory.formatLocation(p_205751_1_, p_205751_2_, p_205751_3_);
+//         });
+//         throw new ReportedException(crashreport);
+//      }
+   }
+
+   public FluidState getFluidStatePaper(int i, int j, int k) {
+      //try {  // Paper - remove try catch
+      // Paper start - reduce the number of ops in this call
+      int index = j >> 4;
+      if (index >= 0 && index < this.field_76652_q.length) {
+         ChunkSection chunksection = this.field_76652_q[index];
+
+         if (chunksection != null) {
+            return chunksection.field_177488_d.func_186015_a((j & 15) << 8 | (k & 15) << 4 | i & 15).func_204520_s();
          }
-
-         return Fluids.field_204541_a.func_207188_f();
-      } catch (Throwable throwable) {
-         CrashReport crashreport = CrashReport.func_85055_a(throwable, "Getting fluid state");
-         CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being got");
-         crashreportcategory.func_189529_a("Location", () -> {
-            return CrashReportCategory.func_184876_a(p_205751_1_, p_205751_2_, p_205751_3_);
-         });
-         throw new ReportedException(crashreport);
+         // Paper end
       }
+
+      return Fluids.field_204541_a.func_207188_f();
+        /*} catch (Throwable throwable) { // Paper - remove try catch
+            CrashReport crashreport = CrashReport.a(throwable, "Getting fluid state");
+            CrashReportSystemDetails crashreportsystemdetails = crashreport.a("Block being got");
+
+            crashreportsystemdetails.a("Location", () -> {
+                return CrashReportSystemDetails.a(i, j, k);
+            });
+            throw new ReportedException(crashreport);
+        }
+         */  // Paper - remove try catch
    }
 
    @Nullable
@@ -264,28 +_,28 @@
 
          if (!this.field_76637_e.field_72995_K) {
             blockstate.func_196947_b(this.field_76637_e, p_177436_1_, p_177436_2_, p_177436_3_);
-         } else if (block1 != block && block1 instanceof ITileEntityProvider) {
+         } else if ((block1 != block || !p_177436_2_.hasTileEntity()) && blockstate.hasTileEntity()) {
             this.field_76637_e.func_175713_t(p_177436_1_);
          }
 
          if (!chunksection.func_177485_a(i, j & 15, k).func_203425_a(block)) {
             return null;
          } else {
-            if (block1 instanceof ITileEntityProvider) {
+            if (blockstate.hasTileEntity()) {
                TileEntity tileentity = this.func_177424_a(p_177436_1_, Chunk.CreateEntityType.CHECK);
                if (tileentity != null) {
                   tileentity.func_145836_u();
                }
             }
 
-            if (!this.field_76637_e.field_72995_K) {
+            if (!this.field_76637_e.field_72995_K && !this.field_76637_e.captureBlockSnapshots) {
                p_177436_2_.func_215705_a(this.field_76637_e, p_177436_1_, blockstate, p_177436_3_);
             }
 
-            if (block instanceof ITileEntityProvider) {
+            if (p_177436_2_.hasTileEntity()) {
                TileEntity tileentity1 = this.func_177424_a(p_177436_1_, Chunk.CreateEntityType.CHECK);
                if (tileentity1 == null) {
-                  tileentity1 = ((ITileEntityProvider)block).func_196283_a_(this.field_76637_e);
+                  tileentity1 = p_177436_2_.createTileEntity(this.field_76637_e);
                   this.field_76637_e.func_175690_a(p_177436_1_, tileentity1);
                } else {
                   tileentity1.func_145836_u();
@@ -321,11 +_,15 @@
          k = this.field_76645_j.length - 1;
       }
 
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EnteringChunk(p_76612_1_, this.field_212816_F.field_77276_a, this.field_212816_F.field_77275_b, p_76612_1_.field_70176_ah, p_76612_1_.field_70164_aj));
       p_76612_1_.field_70175_ag = true;
       p_76612_1_.field_70176_ah = this.field_212816_F.field_77276_a;
       p_76612_1_.field_70162_ai = k;
       p_76612_1_.field_70164_aj = this.field_212816_F.field_77275_b;
+      this.entities.add(p_76612_1_); // GoldenForge
       this.field_76645_j[k].add(p_76612_1_);
+      this.func_76630_e(); // Forge - ensure chunks are marked to save after an entity add
+      this.entities.remove(p_76612_1_); // GoldenForge
    }
 
    public void func_201607_a(Heightmap.Type p_201607_1_, long[] p_201607_2_) {
@@ -346,6 +_,7 @@
       }
 
       this.field_76645_j[p_76608_2_].remove(p_76608_1_);
+      this.func_76630_e(); // Forge - ensure chunks are marked to save after entity removals
    }
 
    public int func_201576_a(Heightmap.Type p_201576_1_, int p_201576_2_, int p_201576_3_) {
@@ -356,7 +_,7 @@
    private TileEntity func_177422_i(BlockPos p_177422_1_) {
       BlockState blockstate = this.func_180495_p(p_177422_1_);
       Block block = blockstate.func_177230_c();
-      return !block.func_235695_q_() ? null : ((ITileEntityProvider)block).func_196283_a_(this.field_76637_e);
+      return !blockstate.hasTileEntity() ? null : blockstate.createTileEntity(this.field_76637_e);
    }
 
    @Nullable
@@ -367,6 +_,10 @@
    @Nullable
    public TileEntity func_177424_a(BlockPos p_177424_1_, Chunk.CreateEntityType p_177424_2_) {
       TileEntity tileentity = this.field_150816_i.get(p_177424_1_);
+      if (tileentity != null && tileentity.func_145837_r()) {
+         field_150816_i.remove(p_177424_1_);
+         tileentity = null;
+      }
       if (tileentity == null) {
          CompoundNBT compoundnbt = this.field_201618_i.remove(p_177424_1_);
          if (compoundnbt != null) {
@@ -382,9 +_,6 @@
             tileentity = this.func_177422_i(p_177424_1_);
             this.field_76637_e.func_175690_a(p_177424_1_, tileentity);
          }
-      } else if (tileentity.func_145837_r()) {
-         this.field_150816_i.remove(p_177424_1_);
-         return null;
       }
 
       return tileentity;
@@ -399,7 +_,7 @@
    }
 
    public void func_177426_a(BlockPos p_177426_1_, TileEntity p_177426_2_) {
-      if (this.func_180495_p(p_177426_1_).func_177230_c() instanceof ITileEntityProvider) {
+      if (this.func_180495_p(p_177426_1_).hasTileEntity()) {
          p_177426_2_.func_226984_a_(this.field_76637_e, p_177426_1_);
          p_177426_2_.func_145829_t();
          TileEntity tileentity = this.field_150816_i.put(p_177426_1_.func_185334_h(), p_177426_2_);
@@ -418,9 +_,14 @@
    public CompoundNBT func_223134_j(BlockPos p_223134_1_) {
       TileEntity tileentity = this.func_175625_s(p_223134_1_);
       if (tileentity != null && !tileentity.func_145837_r()) {
+         try {
          CompoundNBT compoundnbt1 = tileentity.func_189515_b(new CompoundNBT());
          compoundnbt1.func_74757_a("keepPacked", false);
          return compoundnbt1;
+         } catch (Exception e) {
+            LogManager.getLogger().error("A TileEntity type {} has thrown an exception trying to write state. It will not persist, Report this to the mod author", tileentity.getClass().getName(), e);
+            return null;
+         }
       } else {
          CompoundNBT compoundnbt = this.field_201618_i.get(p_223134_1_);
          if (compoundnbt != null) {
@@ -455,8 +_,8 @@
    }
 
    public void func_177414_a(@Nullable Entity p_177414_1_, AxisAlignedBB p_177414_2_, List<Entity> p_177414_3_, @Nullable Predicate<? super Entity> p_177414_4_) {
-      int i = MathHelper.func_76128_c((p_177414_2_.field_72338_b - 2.0D) / 16.0D);
-      int j = MathHelper.func_76128_c((p_177414_2_.field_72337_e + 2.0D) / 16.0D);
+      int i = MathHelper.func_76128_c((p_177414_2_.field_72338_b - this.field_76637_e.getMaxEntityRadius()) / 16.0D);
+      int j = MathHelper.func_76128_c((p_177414_2_.field_72337_e + this.field_76637_e.getMaxEntityRadius()) / 16.0D);
       i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
       j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
 
@@ -472,8 +_,8 @@
                   p_177414_3_.add(entity);
                }
 
-               if (entity instanceof EnderDragonEntity) {
-                  for(EnderDragonPartEntity enderdragonpartentity : ((EnderDragonEntity)entity).func_213404_dT()) {
+               if (entity.isMultipartEntity()) {
+                  for(net.minecraftforge.entity.PartEntity<?> enderdragonpartentity : entity.getParts()) {
                      if (enderdragonpartentity != p_177414_1_ && enderdragonpartentity.func_174813_aQ().func_72326_a(p_177414_2_) && (p_177414_4_ == null || p_177414_4_.test(enderdragonpartentity))) {
                         p_177414_3_.add(enderdragonpartentity);
                      }
@@ -486,8 +_,8 @@
    }
 
    public <T extends Entity> void func_217313_a(@Nullable EntityType<?> p_217313_1_, AxisAlignedBB p_217313_2_, List<? super T> p_217313_3_, Predicate<? super T> p_217313_4_) {
-      int i = MathHelper.func_76128_c((p_217313_2_.field_72338_b - 2.0D) / 16.0D);
-      int j = MathHelper.func_76128_c((p_217313_2_.field_72337_e + 2.0D) / 16.0D);
+      int i = MathHelper.func_76128_c((p_217313_2_.field_72338_b - this.field_76637_e.getMaxEntityRadius()) / 16.0D);
+      int j = MathHelper.func_76128_c((p_217313_2_.field_72337_e + this.field_76637_e.getMaxEntityRadius()) / 16.0D);
       i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
       j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
 
@@ -502,8 +_,8 @@
    }
 
    public <T extends Entity> void func_177430_a(Class<? extends T> p_177430_1_, AxisAlignedBB p_177430_2_, List<T> p_177430_3_, @Nullable Predicate<? super T> p_177430_4_) {
-      int i = MathHelper.func_76128_c((p_177430_2_.field_72338_b - 2.0D) / 16.0D);
-      int j = MathHelper.func_76128_c((p_177430_2_.field_72337_e + 2.0D) / 16.0D);
+      int i = MathHelper.func_76128_c((p_177430_2_.field_72338_b - this.field_76637_e.getMaxEntityRadius()) / 16.0D);
+      int j = MathHelper.func_76128_c((p_177430_2_.field_72337_e + this.field_76637_e.getMaxEntityRadius()) / 16.0D);
       i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
       j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
 
@@ -535,6 +_,11 @@
       };
       Sets.newHashSet(this.field_150816_i.keySet()).stream().filter(predicate).forEach(this.field_76637_e::func_175713_t);
 
+      for (TileEntity tileEntity : field_150816_i.values()) {
+         tileEntity.func_145836_u();
+         tileEntity.func_195044_w();
+      }
+
       for(int i = 0; i < this.field_76652_q.length; ++i) {
          ChunkSection chunksection = this.field_76652_q[i];
          if ((p_227073_4_ & 1 << i) == 0) {
@@ -598,7 +_,7 @@
 
    public Stream<BlockPos> func_217304_m() {
       return StreamSupport.stream(BlockPos.func_191531_b(this.field_212816_F.func_180334_c(), 0, this.field_212816_F.func_180333_d(), this.field_212816_F.func_180332_e(), 255, this.field_212816_F.func_180330_f()).spliterator(), false).filter((p_217312_1_) -> {
-         return this.func_180495_p(p_217312_1_).func_185906_d() != 0;
+         return this.func_180495_p(p_217312_1_).getLightValue(func_177412_p(), p_217312_1_) != 0;
       });
    }
 
@@ -704,9 +_,8 @@
       BlockState blockstate = this.func_180495_p(p_212815_1_);
       TileEntity tileentity;
       if ("DUMMY".equals(p_212815_2_.func_74779_i("id"))) {
-         Block block = blockstate.func_177230_c();
-         if (block instanceof ITileEntityProvider) {
-            tileentity = ((ITileEntityProvider)block).func_196283_a_(this.field_76637_e);
+         if (blockstate.hasTileEntity()) {
+            tileentity = blockstate.createTileEntity(this.field_76637_e);
          } else {
             tileentity = null;
             field_150817_t.warn("Tried to load a DUMMY block entity @ {} but found not block entity block {} at location", p_212815_1_, blockstate);
@@ -794,5 +_,21 @@
       IMMEDIATE,
       QUEUED,
       CHECK;
+   }
+
+   @java.lang.Deprecated
+   @javax.annotation.Nullable
+   public final CompoundNBT writeCapsToNBT() {
+      return this.serializeCaps();
+   }
+
+   @java.lang.Deprecated
+   public final void readCapsFromNBT(CompoundNBT tag) {
+      this.deserializeCaps(tag);
+   }
+
+   @Override
+   public World getWorldForge() {
+      return func_177412_p();
    }
 }
