--- a/net/minecraft/world/Region.java
+++ b/net/minecraft/world/Region.java
@@ -17,6 +_,7 @@
 import net.minecraft.world.chunk.AbstractChunkProvider;
 import net.minecraft.world.chunk.EmptyChunk;
 import net.minecraft.world.chunk.IChunk;
+import net.minecraft.world.server.ServerWorld;
 
 public class Region implements IBlockReader, ICollisionReader {
    protected final int field_72818_a;
@@ -37,7 +_,7 @@
 
       for(int k = this.field_72818_a; k <= i; ++k) {
          for(int l = this.field_72816_b; l <= j; ++l) {
-            this.field_72817_c[k - this.field_72818_a][l - this.field_72816_b] = abstractchunkprovider.func_225313_a(k, l);
+            this.field_72817_c[k - this.field_72818_a][l - this.field_72816_b] = ((ServerWorld) p_i50004_1_).func_72863_F().getChunkAtIfLoadedImmediately(k, j); // Paper
          }
       }
 
@@ -75,6 +_,29 @@
    public IBlockReader func_225522_c_(int p_225522_1_, int p_225522_2_) {
       return this.func_226702_a_(p_225522_1_, p_225522_2_);
    }
+
+   // Paper start - if loaded util
+   private IChunk getChunkIfLoaded(int x, int z) {
+      int k = x - this.field_72818_a;
+      int l = z - this.field_72816_b;
+
+      if (k >= 0 && k < this.field_72817_c.length && l >= 0 && l < this.field_72817_c[k].length) {
+         return this.field_72817_c[k][l];
+      }
+      return null;
+   }
+   @Override
+   public FluidState getFluidIfLoaded(BlockPos blockposition) {
+      IChunk chunk = getChunkIfLoaded(blockposition.func_177958_n() >> 4, blockposition.func_177952_p() >> 4);
+      return chunk == null ? null : chunk.func_204610_c(blockposition);
+   }
+
+   @Override
+   public BlockState getTypeIfLoaded(BlockPos blockposition) {
+      IChunk chunk = getChunkIfLoaded(blockposition.func_177958_n() >> 4, blockposition.func_177952_p() >> 4);
+      return chunk == null ? null : chunk.func_180495_p(blockposition);
+   }
+   // Paper end
 
    @Nullable
    public TileEntity func_175625_s(BlockPos p_175625_1_) {
